PUZZLE INPUT: 
Represents a patch of trees arranged in a grid manner, with each number representing the 
height of the tree at that location.

A tree is visible if either all the trees above it, or all trees below it,
or all the trees to its left, or to its right are shorter than it (i.e. the tree is not obstructed).

All trees at the perimeter/edges of the grid are visible by default.


GOAL:
Find the total number of visible trees in the patch.


EXAMPLE:
Given the patch:

30373
25512
65332
33549
35390

A) The trees on the perimeter, i.e.

30373
2   2
6   2
3   9
35390

are all visible. That makes 16 trees.

B) Investigating the trees in the interior of the perimeter:

551
533
354

The first row:
Tree 5: visible from the left(perimeter tree 2 is shorter), and the top (perimeter tree 0 is shorter)
Tree 5: visble from the top (perimeter tree 3 is shorter), and the right (trees 1, and 2 are shorter)
Tree 1: invisible (obstructed on all sides)

The second row:
Tree 5: invisible (obstructed on all sides)
Tree 3: invisible (obstructed on all sides)
Tree 3: visible from the right (perimeter tree 2 is shorter)

The third row:
Tree 3: visible from the left (perimeter tree 3 is shorter)
Tree 5: visible from the bottom (perimeter tree 3 is shorter), and left (trees 3, and 3 are shorter)
Tree 4: invisible (obstructed on all sides)

That gives 16 + 1 + 1 + 1 + 1 + 1 = 21 total visible trees in this patch
